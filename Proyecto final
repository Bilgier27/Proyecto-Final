"""
1. Using this algorithm, users will be allowed to apply for a position in the Google company:
    Requirements:
    A. Age between 22 and 35 years.
    B. Dedicated profession between Systems Engineer or Computer Engineer.
    C. Work experience between 1 and 4 years including previous tests.
2. Consult postulates:
    - This field will allow you to review or check which are those postulates that meet the required characteristics.
3. Information stored in base:
    A. Full name.
    B. ID or Identification.
    C. Email.
    D. Telephone number.
    E. Age.
    F. Years of work experience.
    G. Graduated profession.
    H. City
    I. Sex whether Male or Female.
"""
#The creation of next lists to be used is done
ls_names = []
ls_id = []
ls_mail = []
ls_contact = []
ls_age = []
ls_experience = []
ls_profession = []
ls_city = []
ls_sex = []
#The cleaning variable is imported
import os 
def fnt_clean():
    os.system('cls')
    print('Author: Bilgier Perea A.')
    print('Date: 21 de Mayo del 2024')
    print('Welcome to the Google company')
    print('Do not be evil\n')
#A variable is defined to register all the postulates
def fnt_register(Name, Id, Mail, Contact, Age, Experiencie, Profession, City, Sex):
    if Id == '' or Name == '' or Mail == '' or Contact == '' or Age == '' or Experiencie == '' or Profession == '' or City == '' or Sex == '':
        enter = input('Error, you must enter all data <ENTER>')
#The .append variable is used to add or insert values to my existing list
    else:
        ls_id.append(Id)
        ls_names.append(Name)
        ls_mail.append(Mail)
        ls_contact.append(Contact)
        ls_age.append(Age)
        ls_experience.append(Experiencie)
        ls_profession.append(Profession)
        ls_city.append(City)
        ls_sex.append(Sex)
        enter = input('\nPerson is already registered successfully <ENTER>')
#A selector variable is defined, the selector variable is to select the option that the user wants.
def fnt_selector(option):
    global sw
    fnt_clean()
    if option == '1':
        #The Id is put first to then search for the candidate by his identification and the search is more exact.
        Id = input('\nId:  ')
        if Id in ls_id:
            enter = input('This person is already registered <ENTER>')
        else:
            #Three mandatory pieces of information are requested from the candidate; if they comply, they can continue with the form, otherwise they send it to an else who tells them that they do not comply.
            Age = int(input('Age:  '))
            Experiencie = int(input('Experiencie:   '))
            Profession = input('Profession\n1. Systems Engineer\n2. Computer Engineer\n - >')
            if((Experiencie >= 1 and Experiencie <= 4) and (Profession == '1' or Profession == '2') and  Age >= 22 and Age <=35):
                if Profession == '1':
                    Profession = 'Systems Engineer'
                elif Profession == '2':
                    Profession = 'Computer Engineer'
                Name = input('Name:  ')
                Mail = input('Mail:  ')
                Contact = input('Contact:  ')
                City = input('City:  ')
                Sex = input('Sex\n1.Masculino\n2.Femenino\n ->')
                if Sex == '1':
                    Sex = 'Male'
                elif Sex == '2':
                    Sex = 'Female'
                fnt_register(Name, Id, Mail, Contact, Age, Experiencie, Profession, City, Sex)
            else:   
                input('<ERROR> The candidate does not meet the requirements')
    #In this option 2 a for loop is created to repeat and print all the data that I add to the lists 
    elif option == '2':
        fnt_clean()
        for x in range(len(ls_id)):
            print(f'{ls_id[x]}     {ls_names[x]}     {ls_mail[x]}     {ls_contact[x]}     {ls_age[x]}     {ls_experience[x]}     {ls_profession[x]}     {ls_city[x]}   {ls_sex[x]}')
            enter = input('\nPress <ENTER> to continue')
    elif option == '3':
        sw = False
#I create a cycle of the sw variable so that the program repeats itself until the user wants to exit.
sw = True
while sw == True:
    fnt_clean()
    option = input('1. Register postulates\n2. Show postulates\n3. Salir\n- >  ')
    fnt_selector(option)
